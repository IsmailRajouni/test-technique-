{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 1,
    "pending": 0,
    "failures": 1,
    "start": "2023-11-10T16:13:01.153Z",
    "end": "2023-11-10T16:13:28.660Z",
    "duration": 27507,
    "testsRegistered": 2,
    "passPercent": 50,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "5adfda53-2262-464d-aaa5-b66fcfa6e237",
      "title": "",
      "fullFile": "cypress\\e2e\\motdepasse.cy.js",
      "file": "cypress\\e2e\\motdepasse.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [
        {
          "title": "Vérifie que le mot de passe est suffisamment robuste",
          "fullTitle": "Vérifie que le mot de passe est suffisamment robuste",
          "timedOut": null,
          "duration": 16011,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "// Visite la page d'accueil\ncy.visit('/');\n// Clique sur \"Create an Account\" dans la barre de navigation\ncy.get('.header').contains('Create an Account').click();\n// Vérifie que l'URL contient \"/account/create/\"\ncy.url().should('contain', '/account/create/');\n// Génère des valeurs aléatoires pour le nom, le prénom, l'e-mail et le mot de passe\nconst nom = 'user_' + Math.random().toFixed(5).split('.')[1];\nconst prenom = Math.random().toString(36).substring(2, 7);\nconst email = prenom + '.' + nom + '@yopmail.com';\nconst password = Math.random().toString(36).substring(2, 15).replace(/^\\w/, c => c.toUpperCase());\n// Remplit les champs du formulaire avec les valeurs générées\ncy.get('#firstname').type(prenom);\ncy.get('#lastname').type(nom);\ncy.get('#email_address').type(email);\ncy.get('#password').type(password);\ncy.get('#password-confirmation').type(password);\n// Soumet le formulaire en cliquant sur le bouton \"Submit\"\ncy.get('.actions-toolbar').get('.submit').click();\n// Vérifie que l'URL contient \"/account/\" après la soumission du formulaire\ncy.url().should('contain', '/account/');\n// Vérifie la présence du message de succès après la création du compte\ncy.get('.message-success').contains('Thank you for registering with Main Website Store.').should('exist');",
          "err": {},
          "uuid": "640ed678-1a13-4296-8388-338e84c90768",
          "parentUUID": "5adfda53-2262-464d-aaa5-b66fcfa6e237",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [
        {
          "uuid": "e24aee9b-28da-4c18-a864-0025ea0b93c9",
          "title": "Vérifie que le mot de passe est suffisamment robuste",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Processus de création de compte",
              "fullTitle": "Vérifie que le mot de passe est suffisamment robuste Processus de création de compte",
              "timedOut": null,
              "duration": 11317,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Clique sur \"Create an Account\" dans la barre de navigation\ncy.get('.header').contains('Create an Account').click();\n// Vérifie que l'URL contient \"/account/create/\"\ncy.url().should('contain', '/account/create/');\n// Définit différentes valeurs de mot de passe avec leurs niveaux de robustesse attendus\nconst passwords = [{\n  value: '1234567',\n  strength: 'Weak'\n}, {\n  value: 'Ismail11',\n  strength: 'Medium'\n}, {\n  value: 'Ismail111',\n  strength: 'Strong'\n}];\n// Pour chaque paire de mot de passe et de niveau de robustesse attendu\npasswords.forEach(password => {\n  // Efface le champ de mot de passe\n  cy.get(\"#password\").clear();\n  // Saisit la valeur du mot de passe actuel\n  cy.get('#password').type(password.value);\n  // Vérifie que l'étiquette de niveau de robustesse affiche le niveau attendu\n  cy.get('#password-strength-meter-label').contains(password.strength).should('exist');\n  // Si le niveau de robustesse est 'Weak', vérifie également le message d'erreur spécifique\n  if (password.strength === 'Weak') {\n    cy.get('#password-error').contains('Minimum length of this field must be equal or greater than 8 symbols. Leading and trailing spaces will be ignored.').should('exist');\n  }\n  // Attends 1 seconde entre chaque test\n  cy.wait(1000);\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 3000ms: Expected to find content: 'Weak' within the element: <span#password-strength-meter-label> but never did.",
                "estack": "AssertionError: Timed out retrying after 3000ms: Expected to find content: 'Weak' within the element: <span#password-strength-meter-label> but never did.\n    at eval (webpack://test/./cypress/e2e/motdepasse.cy.js:29:77)\nat Array.forEach (<anonymous>)\n    at Context.eval (webpack://test/./cypress/e2e/motdepasse.cy.js:23:16)",
                "diff": null
              },
              "uuid": "2be8a3d5-031c-442c-834a-a297f6a8fb5f",
              "parentUUID": "e24aee9b-28da-4c18-a864-0025ea0b93c9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "2be8a3d5-031c-442c-834a-a297f6a8fb5f"
          ],
          "pending": [],
          "skipped": [],
          "duration": 11317,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [
        "640ed678-1a13-4296-8388-338e84c90768"
      ],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 16011,
      "root": true,
      "rootEmpty": false,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/json",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}